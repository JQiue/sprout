//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum, Serialize, Deserialize)]
#[sea_orm(
  rs_type = "String",
  db_type = "String(StringLen::None)",
  rename_all = "lowercase"
)]
#[serde(rename_all = "lowercase")]
pub enum DeploymentStatus {
  Pending,
  Uploading,
  Uploaded,
  Reviewing,
  Published,
  Failed,
}

#[derive(Debug, Serialize, Deserialize)]
pub struct GetDeploymentBody {
  pub deployment_id: u32,
}

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize)]
#[sea_orm(table_name = "deployment")]
pub struct Model {
  #[sea_orm(primary_key)]
  pub id: u32,
  pub site_id: String,
  pub agent_id: u32,
  pub status: DeploymentStatus,
  pub build_logs: Option<String>,
  pub deploy_preview_url: Option<String>,
  pub deploy_url: Option<String>,
  pub deploy_token: Option<String>,
  pub execution_time: DateTimeUtc,
  pub created_at: DateTimeUtc,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
